Microsoft (R) Macro Assembler Version 14.28.29337.0	    02/25/21 18:16:07
example.asm						     Page 1 - 1


				; Example assembly language program -- adds two numbers
				; Author:  R. Detmer
				; Date:    1/2008

				.586
				.MODEL FLAT

				INCLUDE io.h            ; header file for input/output
			      C ; IO.H -- header file for I/O macros (listing suppressed)
			      C .NOLIST      ; turn off listing
			      C .LIST        ; begin listing
			      C 

				.STACK 4096

 00000000			.DATA
 00000000 00000000		number1 DWORD   ?
 00000004 00000000		number2 DWORD   ?
 00000008 00000000		number3 DWORD   ?
 0000000C 00000000		number4 DWORD   ?
 00000010 45 6E 74 65 72	prompt1 BYTE    "Enter first number", 0
	   20 66 69 72 73
	   74 20 6E 75 6D
	   62 65 72 00
 00000023 45 6E 74 65 72	prompt2 BYTE    "Enter second number", 0
	   20 73 65 63 6F
	   6E 64 20 6E 75
	   6D 62 65 72 00
 00000037 45 6E 74 65 72	prompt3 BYTE    "Enter third number", 0
	   20 74 68 69 72
	   64 20 6E 75 6D
	   62 65 72 00
 0000004A 45 6E 74 65 72	prompt4 BYTE    "Enter fourth number", 0
	   20 66 6F 75 72
	   74 68 20 6E 75
	   6D 62 65 72 00
 0000005E  00000028 [		string  BYTE    40 DUP (?)
	    00
	   ]
 00000086 54 68 65 20 73	resultLbl BYTE  "The sum is", 0
	   75 6D 20 69 73
	   00
 00000091  0000000B [		sum     BYTE    11 DUP (?), 0
	    00
	   ] 00

 00000000			.CODE
 00000000			_MainProc PROC
				        input   prompt1, string, 40      ; read ASCII characters
				        atod    string          ; convert to integer
 0000002D  A3 00000000 R	        mov     number1, eax    ; store in memory

				        input   prompt2, string, 40      ; repeat for second number
				        atod    string
 0000005F  A3 00000004 R	        mov     number2, eax

				        input   prompt3, string, 40      ; repeat for third number
				        atod    string
 00000091  A3 00000008 R	        mov     number3, eax
				        
				        input   prompt4, string, 40      ; repeat for fourth number
				        atod    string
 000000C3  A3 0000000C R	        mov     number4, eax

 000000C8  A1 00000000 R	        mov     eax, number1    ; first number to EAX
 000000CD  03 05 00000004 R	        add     eax, number2    ; add second number
 000000D3  03 05 00000008 R	        add     eax, number3    ; add second number
 000000D9  2B 05 0000000C R	        sub     eax, number4    ; add second number
				        dtoa    sum, eax        ; convert to ASCII characters
				        output  resultLbl, sum          ; output label and sum

 00000110  B8 00000000		        mov     eax, 0  ; exit with return code 0
 00000115  C3			        ret
 00000116			_MainProc ENDP
				END                             ; end of source code

Microsoft (R) Macro Assembler Version 14.28.29337.0	    02/25/21 18:16:07
example.asm						     Symbols 2 - 1




Macros:

                N a m e                 Type

atod . . . . . . . . . . . . . .	Proc
atow . . . . . . . . . . . . . .	Proc
dtoa . . . . . . . . . . . . . .	Proc
input  . . . . . . . . . . . . .	Proc
output . . . . . . . . . . . . .	Proc
wtoa . . . . . . . . . . . . . .	Proc


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 0000009D Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000116 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

_MainProc  . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000116 Public


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000000h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
_getInput  . . . . . . . . . . .	L Near	 00000000 FLAT	External
_showOutput  . . . . . . . . . .	L Near	 00000000 FLAT	External
atodproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
atowproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
dtoaproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
number1  . . . . . . . . . . . .	DWord	 00000000 _DATA	
number2  . . . . . . . . . . . .	DWord	 00000004 _DATA	
number3  . . . . . . . . . . . .	DWord	 00000008 _DATA	
number4  . . . . . . . . . . . .	DWord	 0000000C _DATA	
prompt1  . . . . . . . . . . . .	Byte	 00000010 _DATA	
prompt2  . . . . . . . . . . . .	Byte	 00000023 _DATA	
prompt3  . . . . . . . . . . . .	Byte	 00000037 _DATA	
prompt4  . . . . . . . . . . . .	Byte	 0000004A _DATA	
resultLbl  . . . . . . . . . . .	Byte	 00000086 _DATA	
string . . . . . . . . . . . . .	Byte	 0000005E _DATA	
sum  . . . . . . . . . . . . . .	Byte	 00000091 _DATA	
wtoaproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External

	   0 Warnings
	   0 Errors
